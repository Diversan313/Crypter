import os
import tkinter as tk
from tkinter import filedialog
from cryptography.fernet import Fernet
import pyperclip
import platform
from colorama import init, Fore

init(autoreset=True)

def choose_file(title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª"):
    root = tk.Tk()
    root.withdraw()
    return filedialog.askopenfilename(title=title)

def encrypt_file():
    file_path = choose_file("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –∞—Ä—Ö–∏–≤ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è")
    if not file_path:
        print("‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    key = Fernet.generate_key()
    fernet = Fernet(key)

    with open(file_path, 'rb') as f:
        data = f.read()

    encrypted = fernet.encrypt(data)
    new_path = file_path + ".encrypted"

    with open(new_path, 'wb') as f:
        f.write(encrypted)

    pyperclip.copy(key.decode())
    print(f"\n‚úÖ –§–∞–π–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –∫–∞–∫: {new_path}")
    print(f"üîë –ö–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:\n{key.decode()}")

def decrypt_file():
    file_path = choose_file("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ (.encrypted)")
    if not file_path:
        print("‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    key_input = input("üîë –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á: ").strip()
    try:
        fernet = Fernet(key_input.encode())
    except Exception:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∫–ª—é—á.")
        return

    with open(file_path, 'rb') as f:
        encrypted_data = f.read()

    try:
        decrypted = fernet.decrypt(encrypted_data)
    except Exception:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å. –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π —Ñ–∞–π–ª.")
        return

    if file_path.endswith(".encrypted"):
        output_path = file_path[:-10]  # –£–±–∏—Ä–∞–µ–º ".encrypted"
    else:
        output_path = file_path

    with open(output_path, 'wb') as f:
        f.write(decrypted)

    print(f"\n‚úÖ –§–∞–π–ª —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫: {output_path}")

def clear_console():
    if platform.system() == "Windows":
        os.system("cls")
    else:
        os.system("clear")

def main():
    while True:
        print("\nüîê –ú–µ–Ω—é:")
        print(Fore.RED + "[1] –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –∞—Ä—Ö–∏–≤")
        print(Fore.GREEN + "[2] –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª")
        print("[3] –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å")
        print("[4] –í—ã–π—Ç–∏")

        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if choice == '1':
            encrypt_file()
        elif choice == '2':
            decrypt_file()
        elif choice == '3':
            clear_console()
        elif choice == '4':
            print("üëã –í—ã—Ö–æ–¥.")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ 1, 2, 3 –∏–ª–∏ 4.")

if __name__ == "__main__":
    main()

